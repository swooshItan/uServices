<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.3.9.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>org</groupId>
	<artifactId>account</artifactId>
	<version>1.0.0</version>
	<name>account</name>
	<description>
		A simple account mgmt app that uses features provided by springframework/springboot/springcloud.
		The app is packaged as docker image and deployed/run as a container using kubernetes/helm.
	</description>

	<properties>
	    <maven.compiler.target>1.8</maven.compiler.target>
		<maven.compiler.source>1.8</maven.compiler.source>
		<spring.cloud.version>Hoxton.SR11</spring.cloud.version>
        <swagger.annotations.version>1.5.24</swagger.annotations.version>
        <swagger.maven.plugin.version>3.1.7</swagger.maven.plugin.version>
		<jose4j.version>0.7.8</jose4j.version>
	</properties>

	<dependencyManagement>
	    <dependencies>
	        <dependency>
	            <groupId>org.springframework.cloud</groupId>
	            <artifactId>spring-cloud-dependencies</artifactId>
	            <version>${spring.cloud.version}</version>
	            <type>pom</type>
	            <scope>import</scope>
	        </dependency>
	    </dependencies>
	</dependencyManagement>

	<dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
		<dependency> 
		    <groupId>org.springframework.boot</groupId> 
		    <artifactId>spring-boot-starter-validation</artifactId> 
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jta-atomikos</artifactId>
        </dependency>
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <scope>runtime</scope>
        </dependency>

		<dependency>
		    <groupId>org.springframework.boot</groupId>
		    <artifactId>spring-boot-starter-oauth2-resource-server</artifactId>
		</dependency>

        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-sleuth</artifactId>
        </dependency>

		<dependency>
		    <groupId>org.springframework.boot</groupId>
		    <artifactId>spring-boot-starter-webflux</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-circuitbreaker-reactor-resilience4j</artifactId>
		</dependency>
		<dependency>
		    <groupId>io.github.resilience4j</groupId>
		    <artifactId>resilience4j-micrometer</artifactId>
		</dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-registry-prometheus</artifactId>
        </dependency>

        <dependency>
            <groupId>io.swagger</groupId>
            <artifactId>swagger-annotations</artifactId>
            <version>${swagger.annotations.version}</version>
        </dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.junit.vintage</groupId>
					<artifactId>junit-vintage-engine</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
        <dependency>
        	<groupId>org.bitbucket.b_c</groupId>
        	<artifactId>jose4j</artifactId>
        	<version>${jose4j.version}</version>
        	<scope>test</scope>
        </dependency>
		<dependency>
		    <groupId>org.springframework.cloud</groupId>
		    <artifactId>spring-cloud-starter-contract-stub-runner</artifactId>
		    <scope>test</scope>
		</dependency>
		<dependency>
	        <groupId>io.rest-assured</groupId>
	        <artifactId>spring-mock-mvc</artifactId>
		</dependency>
		<dependency>
		    <groupId>io.rest-assured</groupId>
		    <artifactId>rest-assured</artifactId>
		    <scope>test</scope>
		</dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.platform</groupId>
            <artifactId>junit-platform-surefire-provider</artifactId>
            <version>1.1.1</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.vintage</groupId>
            <artifactId>junit-vintage-engine</artifactId>
            <scope>test</scope>
        </dependency>
	</dependencies>

	<profiles>
		<profile>
			<id>e2e</id>
			<properties>
				<profile>e2e</profile>
			</properties>
		</profile>
		<profile>
			<id>build</id>
			<properties>
				<profile>build</profile>
			</properties>
			<build>
				<plugins>
					<plugin>
					    <groupId>org.codehaus.mojo</groupId>
					    <artifactId>build-helper-maven-plugin</artifactId>
					    <executions>
							<execution>
								<id>add-integration-test-resource</id>
								<phase>generate-test-resources</phase>
								<goals>
									<goal>add-test-resource</goal>
								</goals>
								<configuration>
									<resources>
										<resource>
											<directory>${project.basedir}/src/it/resources</directory>
											<includes>
												<include>**/*.properties</include>
												<include>**/*.yaml</include>
											</includes>
										</resource>
									</resources>
								</configuration>
							</execution>
					        <execution>
					            <id>add-integration-test-source</id>
					            <phase>generate-test-sources</phase>
					            <goals>
					                <goal>add-test-source</goal>
					            </goals>
					            <configuration>
					                <sources>
					                    <source>${project.basedir}/src/it/java</source>
					                </sources>
					            </configuration>
					        </execution>
					    </executions>
					</plugin>
		            <plugin>
		                <groupId>org.apache.maven.plugins</groupId>
		                <artifactId>maven-surefire-plugin</artifactId>
		                <executions>
		                    <execution>
		                        <id>surefire-it</id>
		                        <phase>integration-test</phase>
		                        <goals>
		                            <goal>test</goal>
		                        </goals>
		                        <configuration>
		                            <includes>
		                                <include>**/*IntegrationTest.java</include>
		                            </includes>
		                        </configuration>
		                    </execution>
		                </executions>
		            </plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

	<build>
		<plugins>
		    <!--
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>properties-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>read-project-properties</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>read-project-properties</goal>
                        </goals>
                        <configuration>
                            <files>
                                <file>${project.basedir}/profiles/${profile}/project.properties</file>
                            </files>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>io.github.swagger2markup</groupId>
                <artifactId>swagger2markup-maven-plugin</artifactId>
            </plugin>
            -->

			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <outputDirectory>${project.build.directory}/docker/context</outputDirectory>
                    <resources>
                        <resource>
                            <directory>${project.build.directory}</directory>
                            <includes>
                                <include>${project.artifactId}-${project.version}.jar</include>
                            </includes>
                        </resource>
                    </resources>
                </configuration>
			</plugin>

			<plugin>
	            <groupId>com.github.kongchen</groupId>
	            <artifactId>swagger-maven-plugin</artifactId>
	            <version>${swagger.maven.plugin.version}</version>
	            <configuration>
	                <apiSources>
	                    <apiSource>
                            <springmvc>true</springmvc>
                            <locations>
                                <location>org.account.controller</location>
                            </locations>
                            <basePath>/</basePath>
                            <info>
                                <title>${project.name}</title>
                                <description>${project.description}</description>
                                <version>${project.version}</version>
                            </info>
                            <swaggerDirectory>${project.build.directory}/classes/static</swaggerDirectory>
	                    </apiSource>
	                </apiSources>
	            </configuration>
	            <executions>
	                <execution>
	                    <phase>prepare-package</phase>
	                    <goals>
	                        <goal>generate</goal>
	                    </goals>
	                </execution>
	            </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-files-for-docker-build</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/docker</outputDirectory>
                            <filters>
								<filter>${project.basedir}/filters/docker.properties</filter>
                            </filters>
                            <resources>
                                <resource>
                                    <directory>${project.basedir}/src/docker</directory>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-chart-for-helm-package</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/chart/${project.artifactId}-${project.version}</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${project.basedir}/src/helm/chart</directory>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-config-for-helm-package</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/chart/${project.artifactId}-${project.version}/config</outputDirectory>
                            <filters>
								<filter>${project.basedir}/filters/helm.properties</filter>
                            </filters>
                            <resources>
                                <resource>
                                    <directory>${project.basedir}/src/docker/context/config</directory>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-profile-values-yaml-for-helm-install</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/chart</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${project.basedir}/profiles/${profile}</directory>
                                    <include>values.yaml</include>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>exec-docker-build</id>
                        <phase>package</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>docker</executable>
                            <commandlineArgs>build --no-cache -t docker.localhub.com/${project.artifactId}:${project.version} ${project.build.directory}/docker</commandlineArgs>
                        </configuration>
                    </execution>

                    <execution>
                        <id>exec-helm-lint</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>helm</executable>
                            <commandlineArgs>lint ${project.build.directory}/chart/${project.artifactId}-${project.version}</commandlineArgs>
                        </configuration>
                    </execution>
                    <execution>
                        <id>exec-helm-package</id>
                        <phase>package</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>helm</executable>
                            <commandlineArgs>package ${project.build.directory}/chart/${project.artifactId}-${project.version} -d ${project.build.directory}/chart</commandlineArgs>
                        </configuration>
                    </execution>
                    <execution>
                        <id>exec-helm-delete</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>helm</executable>
                            <commandlineArgs>delete ${project.artifactId}</commandlineArgs>
                            <successCodes>
                                <successCode>0</successCode>
                                <successCode>1</successCode>
                            </successCodes>
                        </configuration>
                    </execution>
                    <execution>
                        <id>exec-helm-install</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>helm</executable>
                            <commandlineArgs>install ${project.artifactId} ${project.build.directory}/chart/${project.artifactId}-${project.version}.tgz --wait --debug -f ${project.build.directory}/chart/values.yaml</commandlineArgs>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

			<plugin>
			    <groupId>org.codehaus.mojo</groupId>
			    <artifactId>build-helper-maven-plugin</artifactId>
			    <executions>
					<execution>
						<id>set-local-ip-as-property</id>
						<phase>initialize</phase>
						<goals>
							<goal>local-ip</goal>
						</goals>
						<configuration>
							<localIpProperty>local-ip</localIpProperty>
						</configuration>
					</execution>
			    </executions>
			</plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <executions>
                    <execution>
                        <id>default-test</id>
                        <goals>
                            <goal>test</goal>
                        </goals>
                        <configuration>
                            <includes>
                                <include>**/*UnitTest.java</include>
                            </includes>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

		</plugins>
	</build>
</project>
